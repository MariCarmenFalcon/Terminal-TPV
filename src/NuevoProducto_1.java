
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.prefs.Preferences;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class NuevoProducto_1 extends javax.swing.JDialog {

    private JTextField textFieldNombreProducto;
    private final Preferences prefs;
    private ImageIcon mIc;
    /**
     * Creates new form NuevoProducto
     */
    public NuevoProducto_1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();  
        prefs = Preferences.userNodeForPackage(NuevoProducto_1.class);
        setSize(500, 450);
        setTitle("Nuevo Producto");
        setLocationRelativeTo(null);
        
        //Imprimir con mayusculas en el textField
        Mayusculas.setUpperCaseFilter(jTextFieldNombreProducto);       
        
        for (int i = 0; i < Mi_TPV_1.NombresCategorias.size(); i++) {
            jComboBox1.addItem(Mi_TPV_1.NombresCategorias.get(i));
            revalidate();
            repaint();
        }        
    }   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNombreProducto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPrecio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Precio");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("IMAGEN");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Nombre Producto");

        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Categorias");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 210, Short.MAX_VALUE)
                            .addComponent(jTextFieldPrecio)
                            .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //BOTON OK Nuevo Producto
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        String nombre = jTextFieldNombreProducto.getText();
        String precio = jTextFieldPrecio.getText();

        //Compruebo si los campos están vacíos
        if (nombre.isEmpty() || precio.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Creo un JLabel para el nombre y otro para el precio
        JLabel nombreLabel = new JLabel(nombre);
        nombreLabel.setHorizontalAlignment(SwingConstants.CENTER);

        JLabel precioLabel = new JLabel(precio + " \u20AC");
        precioLabel.setHorizontalAlignment(SwingConstants.CENTER);
        precioLabel.setMaximumSize(new Dimension(Integer.MAX_VALUE, precioLabel.getPreferredSize().height));

        //Obtengo la imagen y la escalo
        Icon icono = jLabel3.getIcon();
        if (icono != null && icono instanceof ImageIcon) {
            ImageIcon imagenOriginal = (ImageIcon) icono;
            Image imagenEscalada = imagenOriginal.getImage().getScaledInstance(120, -1, Image.SCALE_SMOOTH);
            ImageIcon imagenEscaladaIcon = new ImageIcon(imagenEscalada);

            //Creo un JLabel para la imagen escalada
            JLabel imagenLabel = new JLabel(imagenEscaladaIcon);
            imagenLabel.setHorizontalAlignment(SwingConstants.CENTER);

            //Creo un panel para el botón con BorderLayout
            JPanel panelBoton = new JPanel(new BorderLayout());
            panelBoton.setPreferredSize(new Dimension(120, 150));
            panelBoton.add(imagenLabel, BorderLayout.NORTH);
            panelBoton.add(nombreLabel, BorderLayout.CENTER);
            panelBoton.add(precioLabel, BorderLayout.SOUTH);

            //Creo el botón y establezco el panel como su contenido
            JButton btn = new JButton();
            btn.setPreferredSize(new Dimension(100, 120));
            btn.setFont(new Font("Arial", Font.PLAIN, 8));
            btn.add(panelBoton);
            
            // Agrego el ActionListener al botón
            btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    //Obtengo el nombre y precio del producto
                    String productoNombre = nombreLabel.getText();
                    double precioUnitario = Double.parseDouble(precio);

                    //Busco si el producto ya está en la tabla
                    //modeloTabla contiene el modelo de datos asociado a la tabla tablaCuenta en la clase Mi_TPV_1
                    DefaultTableModel modeloTabla = (DefaultTableModel) Mi_TPV_1.tablaCuenta.getModel();
                    boolean productoExistente = false;
                    //Variable para almacenar el indice de la fila que contiene el producto si ya existe en la tabla
                    int filaExistente = -1;

                    for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                        //Obtengo el valor de la celda en la columna 0 (primera columna) de la fila i
                        String nombreExistente = (String) modeloTabla.getValueAt(i, 0);
                        //Comparo el valor obtenido con el nombre del producto que intento agregar
                        if (nombreExistente.equals(productoNombre)) {
                            //Si encuentra una coincidencia, pongo productoExistente a true
                            //y guardo el indice de la fila en la variable filaExistente
                            productoExistente = true;
                            filaExistente = i;
                            break;
                        }
                    }

                    //Si el producto ya existe, obtengo la cantidad existente
                    int cantidadExistente = 0; 

                    if (productoExistente) {
                        cantidadExistente = (int) modeloTabla.getValueAt(filaExistente, 1);
                                              
                        //Actualizo cantidad
                        cantidadExistente++;
                        
                        // Calculo el nuevo precio total
                        double precioTotal = cantidadExistente * precioUnitario;

                        //Modifico los valores
                        modeloTabla.setValueAt(cantidadExistente, filaExistente, 1);
                        modeloTabla.setValueAt(precioTotal, filaExistente, 2);                         
                        
                    } else {
                        // Si el producto no existe, agrego una nueva fila con cantidad 1
                        modeloTabla.addRow(new Object[]{productoNombre, 1, precioUnitario});
                    }               
                    
                    // Actualizar la suma total después de agregar un producto
                    double nuevaSuma = Mi_TPV_1.calcularSumaTotal();
                    Mi_TPV_1.sumaCuenta.setText(String.valueOf(nuevaSuma));
                }
               });           

            //Agrego el botón al panel correspondiente
            Mi_TPV_1.listaPaneles.get(jComboBox1.getSelectedIndex()).jPanel2.add(btn);

            //Limpio los campos después de agregar el producto
            jTextFieldNombreProducto.setText("");
            jTextFieldPrecio.setText("");
            jLabel3.setIcon(null);            
          
            this.dispose();

            //Actualizo el newFrame
            revalidate();
            repaint();
        }                
    }//GEN-LAST:event_jButton1ActionPerformed
   
    //jLabel IMAGEN       
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        String Ruta = "";
        JFileChooser jfile = new JFileChooser();
        // Establecer la extensión de archivo predeterminada a JPEG
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPEG files", "jpg", "jpeg");
        jfile.setFileFilter(filtrado);
        int respuesta = jfile.showOpenDialog(this);
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            Ruta = jfile.getSelectedFile().getPath();

            // Cargar la imagen en el jLabel3
            try {
                BufferedImage img = ImageIO.read(new File(Ruta));
                ImageIcon icono = new ImageIcon(img.getScaledInstance(jLabel3.getWidth(), jLabel3.getHeight(), Image.SCALE_SMOOTH));
                jLabel3.setIcon(icono);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jLabel3MouseClicked
   
    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    public javax.swing.JTextField jTextFieldNombreProducto;
    public javax.swing.JTextField jTextFieldPrecio;
    // End of variables declaration//GEN-END:variables
}
